{"version":3,"sources":["firebase.js","StateProvider.js","getRecipientEmail.js","SidebarChat.js","Sidebar.js","bg.jpg","ImageUpload.js","Chat.js","Login.js","reducer.js","App.js","reportWebVitals.js","index.js"],"names":["db","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","firestore","auth","provider","GoogleAuthProvider","storage","StateContext","createContext","StateProvider","reducer","initialState","children","Provider","value","useReducer","useStateValue","useContext","getRecipientEmail","users","userLoggedIn","filter","user","email","SidebarChat","addNewChat","id","history","useHistory","useState","officialuser","setOfficialuser","recipientEmail","messages","setMessages","useChatRef","collection","where","useCollection","roomsSnapshot","recipientSnapshot","recipient","docs","data","useEffect","push","doc","orderBy","onSnapshot","snapshot","map","chatAlreadyExists","find","chat","length","onClick","receiverEmail","prompt","includes","EmailValidator","validate","add","alert","className","to","Avatar","src","photoURL","name","message","substring","Sidebar","sidebar","closeSidebar","rooms","setRooms","unsubscribe","IconButton","displayName","signOut","room","ImageUpload","roomId","image","setImage","progress","setProgress","image_src","setSrc","type","color","height","width","e","preventDefault","console","log","ref","put","on","Math","round","bytesTransferred","totalBytes","error","child","getDownloadURL","then","url","timestamp","FieldValue","serverTimestamp","imageUrl","alt","onChange","target","files","URL","createObjectURL","Chat","openSidebar","input","setInput","useParams","setUsers","lastseen","toDate","toString","slice","Date","toUTCString","index","event","placeholder","bgimage","Login","Button","signInWithPopup","catch","actionTypes","state","action","User","App","setSidebar","dispatch","uid","set","login","merge","onAuthStateChanged","authUser","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.fe14afeb.chunk.js","sourcesContent":["import firebase from \"firebase\";\r\n\r\nconst firebaseApp = firebase.initializeApp({\r\n  apiKey: \"AIzaSyCDvpALb9u1Qn3IXWSNSjP0NtejbWNzsUY\",\r\n  authDomain: \"chatdom-54ec5.firebaseapp.com\",\r\n  projectId: \"chatdom-54ec5\",\r\n  storageBucket: \"chatdom-54ec5.appspot.com\",\r\n  messagingSenderId: \"1050566466990\",\r\n  appId: \"1:1050566466990:web:d25b78788d10b75656fc3f\",\r\n  measurementId: \"G-VHJTWNKJ5Z\"\r\n});\r\n\r\nconst db = firebaseApp.firestore();\r\nconst auth = firebase.auth();\r\nconst provider = new firebase.auth.GoogleAuthProvider();\r\nconst storage = firebase.storage();\r\n\r\nexport { auth,provider, storage}\r\nexport default db;","import React,{createContext,useContext,useReducer} from 'react';\r\n\r\nexport const StateContext = createContext();\r\n\r\nexport const StateProvider = ({reducer,initialState,children}) =>(\r\n    <StateContext.Provider value={useReducer(reducer,initialState)}>{children}</StateContext.Provider>\r\n)\r\n\r\nexport const useStateValue = () => useContext(StateContext);","const getRecipientEmail = (users,userLoggedIn) =>{\r\n   return users?.filter(user => user !== userLoggedIn?.email)[0];\r\n}\r\n\r\nexport default getRecipientEmail;","import React,{useState,useEffect} from 'react';\r\nimport { Avatar } from '@material-ui/core';\r\nimport './SidebarChat.css';\r\nimport db from './firebase.js'\r\nimport { Link,useHistory } from 'react-router-dom';\r\nimport GroupAddIcon from '@material-ui/icons/GroupAdd';\r\nimport { useStateValue } from './StateProvider';\r\nimport EmailValidator from 'email-validator';\r\nimport {useCollection} from \"react-firebase-hooks/firestore\";\r\nimport getRecipientEmail from './getRecipientEmail';\r\n\r\n\r\n\r\nconst SidebarChat = ({addNewChat,id,users}) =>{\r\n  const history = useHistory();\r\n    const [{user},dispatch] = useStateValue();\r\n    const [officialuser,setOfficialuser] = useState([]);\r\n   \r\n   const recipientEmail = getRecipientEmail(users,user)?getRecipientEmail(users,user):null; \r\n    \r\n//  const [seed, setSeed] = useState('');\r\n const [messages, setMessages] = useState(\"\");\r\n\r\n const useChatRef = db.collection('rooms').where('users', 'array-contains', user.email);\r\n const [roomsSnapshot] = useCollection(useChatRef);\r\n  \r\n const [recipientSnapshot] = useCollection(\r\n     db.collection(\"users\").where(\"email\", \"==\", recipientEmail)\r\n     );\r\n const recipient = recipientSnapshot?.docs?.[0]?.data();\r\n//  console.log(recipientEmail);\r\n\r\nuseEffect(() => {\r\n    history.push(`/rooms/${id}`);\r\n},[id])\r\n\r\n useEffect(() =>{\r\n     if(id) {\r\n         db.collection('rooms')\r\n           .doc(id)\r\n           .collection('messages')\r\n           .orderBy('timestamp','desc')\r\n           .onSnapshot(snapshot => (\r\n               setMessages(snapshot.docs.map(doc => doc.data()))\r\n           ))\r\n     }\r\n },[id])\r\n\r\n\r\n useEffect(()=>{\r\n       db.collection('users').onSnapshot(snapshot => (\r\n         setOfficialuser(snapshot.docs.map(doc => (doc.data().email)))\r\n       ))\r\n     },[])\r\n     \r\n     \r\n     \r\n\r\n \r\n\r\n\r\n \r\n const createChat = () =>{\r\n     const receiverEmail = prompt(\"Please enter email of the user\");\r\n    \r\n     const isOfficialuser = officialuser.includes(receiverEmail);\r\n    \r\n     if(isOfficialuser && EmailValidator.validate(receiverEmail) && !chatAlreadyExists(receiverEmail) && receiverEmail !== user.email){\r\n         //we add the chat into DB 'rooms' collection if it does not already exist and is valid\r\n        db.collection('rooms').add({\r\n           users: [user.email, receiverEmail]\r\n        })\r\n     }\r\n     else{\r\n        alert(receiverEmail+\" is NOT RIGESTERED OR ASK USER TO LOGIN\");\r\n     } \r\n     \r\n     \r\n };\r\n\r\n const chatAlreadyExists = (recipientEmail) =>{\r\n  return !!roomsSnapshot.docs.find((chat) => chat.data().users.find((user) => user === recipientEmail)?.length >0);\r\n\r\n }\r\n    \r\n    return !addNewChat?(\r\n      <Link to={`/rooms/${id}`} >  \r\n        <div className=\"sidebar_chat\">\r\n            {recipient?(<Avatar src={recipient?.photoURL}/>):(\r\n            <Avatar>{recipientEmail[0]}</Avatar>\r\n             )}  \r\n       \r\n       <div className=\"sidebarchat_info\">\r\n           <h2>{recipient?.name}</h2>\r\n           <p>{messages[0]?.message?.substring(0,17)}</p>\r\n       </div>\r\n        </div>\r\n        </Link>\r\n    ):(\r\n        <div onClick={createChat} className=\"sidebar_chat fixed\">\r\n            <GroupAddIcon/>\r\n            <h5>ENTER EMAIL ID</h5>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SidebarChat;","import React,{useEffect,useState} from 'react';\r\nimport './Sidebar.css'\r\nimport { Avatar, IconButton } from '@material-ui/core';\r\nimport DonutLargeIcon from '@material-ui/icons/DonutLarge';\r\nimport ChatIcon from '@material-ui/icons/Chat';\r\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\r\nimport { SearchOutlined } from '@material-ui/icons';\r\nimport SidebarChat from './SidebarChat';\r\nimport db,{auth} from './firebase';\r\nimport { useStateValue } from \"./StateProvider\";\r\nimport ExitToAppIcon from '@material-ui/icons/ExitToApp';\r\n\r\n\r\n\r\nconst Sidebar = ({sidebar,closeSidebar}) =>{\r\n    const [rooms,setRooms] = useState([]);\r\n    const [{user},dispatch] = useStateValue();\r\n    \r\n\r\n    useEffect(() => {\r\n     const unsubscribe = db.collection('rooms').onSnapshot(snapshot => (\r\n          setRooms(snapshot.docs.map(doc => ({id: doc.id,\r\n        data: doc.data(),})))\r\n      )) \r\n\r\n      return () => {\r\n          unsubscribe();\r\n      }\r\n    }, []);\r\n    \r\n\r\n    const handleLogout= ()=>{\r\n     auth.signOut();\r\n    }\r\n    return(\r\n        <div  onClick={closeSidebar} className={`sidebar ${sidebar && 'visible'}`}>\r\n\r\n            <div className=\"sidebar_header\">\r\n                <div className=\"sidebar_headerLeft\">\r\n            <IconButton>\r\n             <Avatar src={user?.photoURL}/>\r\n             </IconButton>\r\n             <h3>{user.displayName}</h3>\r\n                </div>\r\n             <div className=\"sidebar_headerRight\">\r\n                 {/* <IconButton>\r\n                 <DonutLargeIcon/>\r\n                 </IconButton>\r\n                 <IconButton>\r\n                 <ChatIcon/>\r\n                 </IconButton>\r\n                 <IconButton>\r\n                 <MoreVertIcon/>\r\n                 </IconButton> */}\r\n\r\n                  <IconButton onClick={handleLogout}>\r\n                 <ExitToAppIcon/> <h6>Log out</h6>\r\n                 </IconButton>\r\n             </div>\r\n            </div>\r\n\r\n\r\n            {/* <div className=\"sidebar_search\">\r\n                <div className=\"sidebar_searchContainer\">\r\n             <SearchOutlined/>\r\n             <input placeholder=\"search msg\"/>\r\n                </div>\r\n            </div> */}\r\n\r\n \r\n            <div className=\"sidebar_chats\">\r\n            <SidebarChat addNewChat/>\r\n            {/* {console.log(rooms)} */}\r\n            {rooms.map(room => {\r\n                if((room.data.users[0] === user.email) || (room.data.users[1] === user.email)){\r\n                    return  <SidebarChat key={room.id} id={room.id} users={room.data.users}/>\r\n                }\r\n})}\r\n            </div>\r\n        </div>\r\n    )\r\n} \r\n\r\nexport default Sidebar","export default __webpack_public_path__ + \"static/media/bg.0a583fc4.jpg\";","import React, {useState,useRef} from 'react';\r\nimport InsertPhotoIcon from '@material-ui/icons/InsertPhoto';\r\nimport ReactLoading from 'react-loading';\r\nimport { useStateValue } from './StateProvider';\r\nimport firebase from 'firebase';\r\nimport db,{storage} from './firebase';\r\nimport './ImageUpload.css'\r\nimport SendIcon from '@material-ui/icons/Send';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\n\r\n\r\n\r\n\r\nconst ImageUpload = ({roomId}) =>{\r\n    const [image,setImage] = useState(null);\r\n    const [progress,setProgress] = useState(0);\r\n    const [{user},dispatch] = useStateValue();\r\n    const [image_src,setSrc] = useState(null)\r\n\r\n    const handleChange =(e)=>{\r\n        if(e.target.files[0].type === 'image/jpeg' || e.target.files[0].type === 'image/png' || e.target.files[0].type === 'image/jpg'){\r\n            setImage(e.target.files[0]);\r\n            setSrc(URL.createObjectURL(e.target.files[0]));\r\n        }\r\n        else{\r\n            alert(\"This is not a image file\");\r\n        }\r\n    };\r\n\r\n    const handleUpload = (e) =>{\r\n       e.preventDefault();\r\n      console.log(image.type);\r\n       if(!image){\r\n           return\r\n       }\r\n      \r\n    //    console.log(image.name);\r\n      storage.ref(`images/${image.name}`).put(image)\r\n      .on(\r\n            \"state_changed\",\r\n            (snapshot) => {\r\n                const progress = Math.round(\r\n                    (snapshot.bytesTransferred / snapshot.totalBytes) * 100\r\n                );\r\n                setProgress(progress);\r\n            },\r\n            (error) => {\r\n                alert(error.message);\r\n            },\r\n            ()=>{\r\n                storage\r\n                   .ref('images')\r\n                   .child(image.name)\r\n                   .getDownloadURL()\r\n                   .then(url => {\r\n                       db.collection('rooms').doc(roomId)\r\n                       .collection('messages').add({\r\n                           timestamp: firebase.firestore.FieldValue.serverTimestamp(),\r\n                           imageUrl: url,\r\n                           name: user.displayName,\r\n                       })\r\n                       .then(() => {\r\n                        setImage(null)\r\n                        setProgress(0);\r\n                      })\r\n\r\n                    //    setImage(null);\r\n                    });\r\n                    // console.log(\"done\") \r\n            }\r\n\r\n        )\r\n    }\r\n\r\n    // const hiddenFileInput = useRef(null);\r\n\r\n    const handleclose = () => {\r\n        setImage(null);\r\n    }\r\n\r\n\r\n    return(\r\n        <div className=\"upload\">\r\n            {!image?<label className=\"image_input\">\r\n                <InsertPhotoIcon/>\r\n            <input type=\"file\" onChange={handleChange}  />\r\n            </label>:\r\n        <div className=\"preview\">\r\n                <CloseIcon className=\"preview_close\" onClick={handleclose}/>\r\n            {progress? <ReactLoading type=\"balls\" color=\"red\" height={50} width={50} className=\"preview_loading\" />:<div className=\"preview_send\">\r\n            <button onClick={handleUpload} className=\"send_button\"><SendIcon /></button>\r\n            <img src={image_src} alt=\"\" className=\"preview_image\"/>\r\n            </div>}\r\n            </div>}\r\n        </div>\r\n    )\r\n     \r\n}\r\n\r\nexport default ImageUpload;","import React, { useState, useEffect } from 'react'\r\nimport './Chat.css'\r\nimport { Avatar, IconButton } from '@material-ui/core'\r\nimport { SearchOutlined, AttachFile, MoreVert, InsertEmoticon } from '@material-ui/icons';\r\nimport MicIcon from '@material-ui/icons/Mic';\r\nimport { useParams } from 'react-router';\r\nimport db from './firebase';\r\nimport { useStateValue } from './StateProvider';\r\nimport firebase from 'firebase';\r\nimport SendIcon from '@material-ui/icons/Send';\r\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\r\nimport './Sidebar.css'\r\nimport FlipMove from 'react-flip-move';\r\nimport ReactScrollToBottom from 'react-scroll-to-bottom'\r\nimport getRecipientEmail from './getRecipientEmail';\r\nimport { useCollection } from 'react-firebase-hooks/firestore';\r\nimport bgimage from './bg.jpg'\r\nimport ImageUpload from './ImageUpload';\r\n\r\n\r\nconst Chat = ({ sidebar, openSidebar }) => {\r\n    const [seed, setSeed] = useState('');\r\n    const [input, setInput] = useState('');\r\n    const { roomId } = useParams();\r\n    const [roomname, setRoomName] = useState('');\r\n    const [messages, setMessages] = useState([]);\r\n    const [{ user }, dispatch] = useStateValue();\r\n    const [users, setUsers] = useState([]);\r\n\r\n\r\n    useEffect(() => {\r\n        if (roomId) {\r\n            db.collection('rooms').doc(roomId)\r\n                .onSnapshot(snapshot => setUsers(snapshot.data()?.users));\r\n        }\r\n    }, [roomId])\r\n\r\n\r\n    const recipientEmail = getRecipientEmail(users, user) ? getRecipientEmail(users, user) : 0;\r\n\r\n    const [recipientSnapshot] = useCollection(\r\n        db.collection(\"users\").where(\"email\", \"==\", recipientEmail)\r\n    );\r\n    const recipient = recipientSnapshot?.docs?.[0]?.data();\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        const unsubscribe = db.collection('rooms').doc(roomId)\r\n            .collection('messages').orderBy('timestamp', 'asc').onSnapshot(snapshot => (\r\n                setMessages(snapshot.docs.map(doc => doc.data()))\r\n            ))\r\n        return () => {\r\n            unsubscribe();\r\n        }\r\n\r\n    }, [roomId])\r\n\r\n\r\n\r\n\r\n    const sendMessage = (event) => {\r\n        event.preventDefault();\r\n        if (recipient && input) {\r\n            db.collection('rooms').doc(roomId)\r\n                .collection('messages').add({\r\n                    message: input,\r\n                    name: user.displayName,\r\n                    timestamp: firebase.firestore.FieldValue.serverTimestamp(),\r\n                })\r\n            setInput('')\r\n        }\r\n    }\r\n\r\n    if(!recipientEmail){\r\n        return(\r\n            <div className=\"chat nochathead\">\r\n                  <div className=\"chat_header nochat\">\r\n                  <img className=\"chatlogo\" src=\"https://see.fontimg.com/api/renderfont4/z80eL/eyJyIjoiZnMiLCJoIjo2NiwidyI6MTI1MCwiZnMiOjUzLCJmZ2MiOiIjMDAwMDAwIiwiYmdjIjoiIzg3ODdDQSIsInQiOjF9/Y2hhdGRvbQ/your-dream.png\" alt=\"\" />\r\n                <div className=\"chat_headerRight\">\r\n                    <IconButton onClick={openSidebar} className=\"slide_button\">\r\n                        {sidebar ? <ChevronLeftIcon /> : <ChevronRightIcon />}\r\n                    </IconButton>\r\n                </div>\r\n            </div>\r\n               <img className=\"bgimage\" src={bgimage} alt=\"\" />\r\n            </div>\r\n        )\r\n    }\r\n\r\n    return (\r\n           \r\n        <div className=\"chat\">\r\n            <div className=\"chat_header\">\r\n                {recipient ? (<Avatar src={recipient?.photoURL} />) : (\r\n                    <Avatar>{recipientEmail[0]}</Avatar>\r\n                )}\r\n                <div className=\"chat_headerInfo\">\r\n                    <h2>{recipient?.name}</h2>\r\n                    {recipient ?<p>last seen{\" \"}{(recipient?.lastseen?.toDate()).toString().slice(0, 25)}</p> : <p>last seen{\" \"}{new Date(messages[messages.length - 1]?.timestamp?.toDate()).toUTCString().slice(0, 26)}</p>}\r\n                    \r\n                </div>\r\n                <div className=\"chat_headerRight\">\r\n                    <IconButton onClick={openSidebar} className=\"slide_button\">\r\n                        {sidebar ? <ChevronLeftIcon /> : <ChevronRightIcon />}\r\n                    </IconButton>\r\n                </div>\r\n            </div>\r\n\r\n            <ReactScrollToBottom className=\"chat_body\" onClick={sidebar && openSidebar}>\r\n                <FlipMove>\r\n                    {messages.map((message, index) => {\r\n\r\n                        \r\n                        if(!message.imageUrl){\r\n                            //  <span className=\"chat_name\">{message.name}</span>\r\n                        return <div  className={`chat_message ${message.name === user.displayName && \"chat_recevier\"}`}><p>{message.message}</p><span className=\"chat_timestamp\">{message.timestamp?.toDate().toString().slice(0, 25)}</span></div>\r\n                        }\r\n                        // <span className=\"image_sender\">{message.name}</span>\r\n                        return <div className={`image ${message.name === user.displayName && \"chat_recevier\"}`}><img  src={message.imageUrl} alt=\"Uploaded Images\"/><span className=\"image_timestamp\">{message.timestamp?.toDate().toString().slice(0, 25)}</span></div> \r\n                    })}\r\n                </FlipMove>\r\n            </ReactScrollToBottom>\r\n            \r\n            <div className=\"chat_footer\">\r\n                {/* <InsertEmoticon/> */}\r\n                <ImageUpload roomId={roomId}/>\r\n                <form >\r\n                    <input value={input} onChange={event => setInput(event.target.value)} type=\"text\" placeholder=\"Type a message\" />\r\n                    <button type=\"submit\" onClick={sendMessage}><SendIcon /></button>\r\n                </form>\r\n                {/* <MicIcon/> */}\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Chat;","import React,{useState} from 'react';\r\nimport \"./Login.css\";\r\nimport { Button } from '@material-ui/core';\r\nimport { auth,provider  } from './firebase';\r\n\r\nimport { useStateValue } from \"./StateProvider\";\r\n\r\nconst Login = ()=>{\r\n    const [{}, dispatch] = useStateValue();\r\n\r\n    const signIn = ()=>{\r\n       auth.signInWithPopup(provider)\r\n    //    .then(result => {\r\n          \r\n    //    })\r\n       .catch((error) => alert(error.message));\r\n    }\r\n    return(\r\n        <div className=\"login\">\r\n         <div className=\"login_container\">\r\n             <img src=\"https://upload.wikimedia.org/wikipedia/commons/e/e3/KakaoTalk_logo.svg\" alt=\"\" />\r\n             <div className=\"login_text\">\r\n                 <h1>sign in to chatdom</h1>\r\n             </div>\r\n\r\n             <Button onClick={signIn}>sign in with google</Button>\r\n         </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Login;","export const initialState ={\r\n    user: null,\r\n}\r\n\r\nexport const actionTypes = {\r\n    SET_USER: \"SET_USER\",\r\n};\r\n\r\nconst reducer = (state,action) => {\r\n    \r\n    switch(action.type) {\r\n        case actionTypes.SET_USER:\r\n            return {\r\n                ...state,\r\n                user:action.User,\r\n            };\r\n \r\n            default:\r\n                return state;\r\n    }\r\n};\r\n\r\nexport default reducer;","import React,{useState,useEffect} from \"react\";\nimport \"./App.css\";\nimport Sidebar from \"./Sidebar\";\nimport Chat from \"./Chat\";\nimport {\n    BrowserRouter as Router,\n    Route,\n    Link,\n    Switch\n} from 'react-router-dom';\nimport Login from \"./Login\";\nimport { useStateValue } from \"./StateProvider\";\nimport db,{auth} from \"./firebase\";\nimport { actionTypes } from './reducer';\nimport firebase from \"firebase\";\n// import { useAuthState } from 'react-firebase-hooks';\n\nconst App = () =>{\n  const [sidebar,setSidebar] = useState(false);\n  const [{user}, dispatch] = useStateValue();\n//   const [officialuser,setOfficialuser] = useState([]);\n \n//    console.log(user);\n\n//  useEffect(()=>{\n//    db.collection('officialUser').onSnapshot(snapshot => (\n//      setOfficialuser(snapshot.docs.map(doc => (doc.data().email)))\n//    ))\n//  },[])\n//  const email = user?.email;\n//  const isOfficialuser = officialuser.includes(email);\n//  console.log(isOfficialuser);\n\n\n// const[newuser,loading] = useAuthState(auth);\n// console.log(newuser);\n\nuseEffect(()=>{\n  if(user){\n  db.collection('users').doc(user.uid).set(\n    {\n    name: user.displayName,  \n    email: user.email,\n    lastseen: firebase.firestore.FieldValue.serverTimestamp(),\n    photoURL: user.photoURL,\n    login: true,\n  },\n  {merge: true}\n  );\n  }\n},[user])\n\n\nuseEffect(()=>{\n  auth.onAuthStateChanged(authUser => {\n    if(authUser){\n      dispatch({\n        type: actionTypes.SET_USER,\n        User: authUser,\n    })\n    }\n    else{\n      dispatch({\n        type: actionTypes.SET_USER,\n        User: null,\n    })\n    }\n  })\n  \n},[])\nconst openSidebar = ()=>{\n  if(sidebar){\n    setSidebar(false);\n  }\n  else{\n    setSidebar(true);\n  }\n}\nconst closeSidebar = ()=>{\n  setSidebar(false);\n}\n\n\n  return (\n    <div className=\"app\">\n      {!user?(\n        <Login/>\n      ):(\n      <div className=\"app_body\">\n        <Router>\n          <Sidebar sidebar={sidebar} closeSidebar={closeSidebar}/>\n          <Switch>\n            <Route path=\"/rooms/:roomId\">\n            <Chat sidebar={sidebar} openSidebar={openSidebar}/>\n            </Route>\n            <Route path=\"/\">\n            <Chat sidebar={sidebar} openSidebar={openSidebar}/>\n            </Route>\n            <Route path=\"/login\">\n              <Login/>\n            </Route>\n          </Switch>\n        </Router>\n      </div>\n      )}\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport reducer, {initialState} from \"./reducer\";\nimport { StateProvider } from \"./StateProvider\"\n\nReactDOM.render(\n  <React.StrictMode>\n    <StateProvider initialState={initialState} reducer={reducer}>\n    <App />\n    </StateProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}